app.controller("NewsStandCtrl", function($scope, $http, $rootScope, $timeout ,SDKService) {
    var name = $rootScope.provider;
    $scope.providerjson = name;
    if($rootScope.catindex)
    {
    $scope.catindex = $rootScope.catindex;
    }
    else
    {
    $scope.catindex = 0;
    }
    var responsePromise = $http.get("simulation/" + name + ".json");
    responsePromise.success(function(data, status, headers, config) {
        $scope.categories = data.categories;
        $scope.providerimage = data.logo;
        $scope.provider = data.provider;

        selectFav($scope);
    });
    responsePromise.error(function(data, status, headers, config) {
        alert("error");
        $("#providers").append("<div style='color:#fff;'>No providers available..</div>");
    });
    
    
    $.getScript("js/scroll/jquery.mCustomScrollbar.concat.min.js",function(){
                //scroll management
                     $(".news_list").mCustomScrollbar({
                    scrollButtons:{
                        enable:true
                    },
                    advanced : {
                        updateOnContentResize : true,
                        contentTouchScroll: true,
                         moveDragger:true
                    }
                }); 
                
                
                
            }); 

    $scope.setcatInd = function(index) {

        $scope.catindex = index;
        selectFav($scope);
    }
    $scope.getsingleArticle = function(articleindex, categoryindex) {
        $rootScope.articleIndex = articleindex;
        $rootScope.categoryindex = categoryindex;

    };
        $scope.markFavourite = function(catindex,catname,provider,providerimage,articleimg,service) {
            /********************************************************************/
            SDKService.checkUserLoggedIn(
                    function(loggedInRes){      
                            if (loggedInRes.result && loggedInRes.result['active-user']){
                                $scope.addFavAfterLogin(catindex,catname,provider,providerimage,articleimg,service);
                            }
                            else{
                                
                                if(window.cePlatform) {
                                        if (loggedInRes && loggedInRes['id']) {
                                            $scope.addFavAfterLogin(catindex,catname,provider,providerimage,articleimg,service);
                                        } else {
                                        customPopup.showtimerPopup({
                                        popupType: "timer", // popup type
                                        popupTitle: 'Login', // popup title
                                        popupMessage: 'Please login to access favourites', // popup message
                                        popupTimer: 2, // used only for timer popup
                                    // call back function used in 2WayDecision popup onclick of 
                                    });
                                    }
                                } else {                

                                    SDKService.tryToLogin("favourites",function(response) {
                                    var resJSONData = JSON.parse(response["response-data"]);
                                    //CI.Utils.Logger.log('Login APP response data ' + JSON.stringify(response));
                                        if (resJSONData["user-id"] !== undefined) {     
                                            $scope.addFavAfterLogin(catindex,catname,provider,providerimage,articleimg,service);
                                            
                                        }
                                    }, function(errRes) {
                                        //CI.Utils.Logger.log('NewsStandCtrl: Error response got while login');
                                        SDKService.showPopup({
                                            popupType: "timer", // popup type
                                            popupTitle: "Unable to connect"+catname+" not added to My News", // popup title
                                            popupMessage: "Unable to connect"+catname+" not added to My News", // popup message
                                            popupTimer: 2, // used only for timer popup
                                        });
                                    }); 

                                }
                            }   
                    });     

           /********************************************************************/   
        };

 $scope.addFavAfterLogin = function(catindex,catname,provider,providerimage,articleimg,service) {
    var jsonStr = localStorage.getItem("favStoredJson");

        if (!jsonStr)
            jsonStr = '{"favStored":[]}';
        var obj = JSON.parse(jsonStr);
        //var push_val = ;
        var cur_img = $(".favo-icon-" + catindex).attr('id');

        var img_status = (cur_img == "favicon" ? true : false);

        if (img_status) { 
            obj['favStored'].push({'category': catindex,'catname': catname, 'favorite': img_status, 'provider': provider,'providerimage': providerimage,'articleimg':articleimg ,'service':service});

        } else { 
            removeItem(obj.favStored, catindex, provider);

        }

        jsonStr = JSON.stringify(obj);
        console.log(jsonStr)
        localStorage.setItem("favStoredJson", jsonStr);
        

        var img_status_o = img_status ? "load_favicon" : "favicon";
        $(".favo-icon-" + catindex).attr('id', "load_favicon").addClass('news-favourite-update');
        $timeout(function() {
            $(".favo-icon-" + catindex).removeClass('news-favourite-update');
            img_status_o = cur_img == "favicon" ? "not_favicon" : "favicon";
            $(".favo-icon-" + catindex).attr('id', img_status_o);
            selectFav($scope);
            if (img_status) { 
                SDKService.showPopup({
                    popupType: "timer", // popup type
                    popupTitle: catname+" added to My News", // popup title
                    popupMessage: catname+" added to My News", // popup message
                    popupTimer: 2, // used only for timer popup
                });
            } else { 
                    SDKService.showPopup({
                    popupType: "timer", // popup type
                    popupTitle: catname+" deleted form My News", // popup title
                    popupMessage: catname+" deleted form My News", // popup message
                    popupTimer: 2, // used only for timer popup
                });
            }

        }, 800);
    };

});

//function to remove a value from the json array
function removeItem(obj, val1, val2) {
    var c, found = false;
    for (c in obj) { //console.log(c);
        if (obj[c] == null) {
            obj.splice(c, 1);
        } else {
            if (obj[c]["category"] == val1 && obj[c]["provider"] == val2) {
                obj.splice(c, 1);
                break;
            }
        }
    }

}
function selectFav($scope) {
    var jsonStr = localStorage.getItem("favStoredJson");
    var jsonStr_i = JSON.parse(jsonStr);
    if (jsonStr_i) {
        var obj = jsonStr_i.favStored;
        var c;
        $scope.fav = false;
        for (c in obj) {
            if (obj[c]["category"] == $scope.catindex && obj[c]["provider"] == $scope.provider) {
                $scope.fav = true;
            }
        }
    }
}




